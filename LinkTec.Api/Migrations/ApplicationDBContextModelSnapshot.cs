// <auto-generated />
using System;
using LinkTec.Api.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LinkTec.Api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("LinkTec.Api.Entities.ContatoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Mensagem")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ContatoCliente");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Assunto")
                        .HasColumnType("longtext");

                    b.Property<string>("Corpo")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoEmail")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmailsTemplate");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.OfertanteCertificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("longblob");

                    b.Property<Guid>("OfertanteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ParceiroId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TipoServico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfertanteId");

                    b.HasIndex("ParceiroId");

                    b.ToTable("OfertanteCertificados");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.Parceiro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Documento")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.Property<int>("TipoParceiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parceiros");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.PropostaSolicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Aceitada")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("HoraProposta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("OfertanteId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Recusada")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("SolicitacaoDeServicoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SolicitacaoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OfertanteId");

                    b.HasIndex("SolicitacaoDeServicoId");

                    b.ToTable("PropostasSolicitacoes");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.SolicitacaoDeServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Aceita")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ativa")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DescricaoServico")
                        .HasColumnType("longtext");

                    b.Property<string>("Enunciado")
                        .HasColumnType("longtext");

                    b.Property<int>("FormaPagamentoAceita")
                        .HasColumnType("int");

                    b.Property<Guid?>("OfertanteId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Recusada")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SolicitanteId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TipoServico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfertanteId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("SolicitacoesDeServico");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.OfertanteCertificado", b =>
                {
                    b.HasOne("LinkTec.Api.Entities.Parceiro", "Ofertante")
                        .WithMany()
                        .HasForeignKey("OfertanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinkTec.Api.Entities.Parceiro", "Parceiro")
                        .WithMany()
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ofertante");

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.PropostaSolicitacao", b =>
                {
                    b.HasOne("LinkTec.Api.Entities.Parceiro", "Ofertante")
                        .WithMany()
                        .HasForeignKey("OfertanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinkTec.Api.Entities.SolicitacaoDeServico", "SolicitacaoDeServico")
                        .WithMany("PropostasSolicitacao")
                        .HasForeignKey("SolicitacaoDeServicoId");

                    b.Navigation("Ofertante");

                    b.Navigation("SolicitacaoDeServico");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.SolicitacaoDeServico", b =>
                {
                    b.HasOne("LinkTec.Api.Entities.Parceiro", "Ofertante")
                        .WithMany()
                        .HasForeignKey("OfertanteId");

                    b.HasOne("LinkTec.Api.Entities.Parceiro", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ofertante");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("LinkTec.Api.Entities.SolicitacaoDeServico", b =>
                {
                    b.Navigation("PropostasSolicitacao");
                });
#pragma warning restore 612, 618
        }
    }
}
